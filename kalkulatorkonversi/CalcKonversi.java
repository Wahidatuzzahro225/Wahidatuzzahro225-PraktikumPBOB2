/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kalkulatorkonversi;

import javax.swing.JOptionPane;

/**
 *
 * @author wahidatuzzahrofebriafithrurrahmah
 */
public class CalcKonversi extends javax.swing.JFrame {

    /**
     * Creates new form CalcKonversi
     */
    public CalcKonversi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputdata = new javax.swing.JLabel();
        input_bilangan = new javax.swing.JTextField();
        bilangan_dari = new javax.swing.JComboBox<>();
        output_bilangan = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        bilangan_ke = new javax.swing.JComboBox<>();
        outputdata = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("\"KALKULATOR KONVERSI\"");

        jLabel2.setText("Dari : ");

        jLabel3.setText("ke :");

        inputdata.setText("INPUT");

        bilangan_dari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hexadecimal", "Decimal", "Biner", "Oktal", " " }));
        bilangan_dari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangan_dariActionPerformed(evt);
            }
        });

        jButton1.setText("KONVERSI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bilangan_ke.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hexadecimal", "Decimal", "Biner", "Oktal", " " }));
        bilangan_ke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bilangan_keActionPerformed(evt);
            }
        });

        outputdata.setText("OUTPUT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(outputdata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(output_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(27, 27, 27))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputdata)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bilangan_dari, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bilangan_ke, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(bilangan_ke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bilangan_dari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputdata)
                    .addComponent(input_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputdata)
                    .addComponent(output_bilangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bilangan_dariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangan_dariActionPerformed
        // TODO add your handling code here:
        if (bilangan_dari.getSelectedItem() == "Hexadecimal"){
            inputdata.setText("INPUT HEXADECIMAL");
        }
        if (bilangan_dari.getSelectedItem() == "Biner"){
            inputdata.setText("INPUT BINER : ");
        }
        if (bilangan_dari.getSelectedItem() == "Oktal"){
            inputdata.setText("INPUT OKTAL : ");
        }
        if (bilangan_dari.getSelectedItem() == "Decimal"){
            inputdata.setText("INPUT DECIMAL: ");
        }
    }//GEN-LAST:event_bilangan_dariActionPerformed

    private void bilangan_keActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bilangan_keActionPerformed
        // TODO add your handling code here:
        if (bilangan_ke.getSelectedItem() == "Hexadecimal"){
            outputdata.setText("OUTPUT HEXADECIMAL");
        }
        if (bilangan_ke.getSelectedItem() == "Biner"){
            outputdata.setText("OUTPUT BINER");
        }
        if (bilangan_ke.getSelectedItem() == "Oktal"){
            outputdata.setText("OUTPUT OKTAL");
        }
        if (bilangan_ke.getSelectedItem() == "Decimal"){
            outputdata.setText("INPUT DECIMAL: ");
        }
        
    }//GEN-LAST:event_bilangan_keActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            //konversi bilangan hexadecimal
            if(bilangan_dari.getSelectedItem()=="Hexadecimal"){
                //konversi bilangan hexadecimal ke hexadecimal
                if(bilangan_ke.getSelectedItem()=="Hexadecimal"){
                    String hexa = input_bilangan.getText();
                    output_bilangan.setText((hexa));
                }
                
                //konversi bilangan hexadecimal ke decimal
                else if(bilangan_ke.getSelectedItem()=="Decimal"){
                    String hexa1 = input_bilangan.getText();
                    int outDes = Integer.parseInt(hexa1,16);
                    output_bilangan.setText(Integer.toUnsignedString(outDes));
                }
                
                //konversi bilangan hexadecimal ke biner
                else if(bilangan_ke.getSelectedItem()=="Biner"){
                    String hexa2 = input_bilangan.getText();
                    int outDes2 = Integer.parseInt(hexa2,16);
                    String hasilDes2 = Integer.toUnsignedString(outDes2);
                    int hasilBiner = Integer.parseInt(hasilDes2);
                    output_bilangan.setText(Integer.toBinaryString(hasilBiner));
                }
                
                //konversi bilangan hexadecimal ke Oktal
                else if(bilangan_ke.getSelectedItem()=="Oktal"){
                    String hexa3 = input_bilangan.getText();
                    int outDes3 = Integer.parseInt(hexa3,16);
                    String hasilDes3 = Integer.toUnsignedString(outDes3);
                    int hasilOktal3 = Integer.parseInt(hasilDes3);
                    output_bilangan.setText(Integer.toOctalString(hasilOktal3));
                }
            }
            
            //konversi bilangan oktal
            if(bilangan_dari.getSelectedItem()=="Oktal"){
                //konversi bilangan oktal ke oktal
                if(bilangan_ke.getSelectedItem()=="Oktal"){
                    String oktal = input_bilangan.getText();
                    output_bilangan.setText((oktal));
                }
                //konversi bilangan oktal ke decimal
                if(bilangan_ke.getSelectedItem()=="Decimal"){
                    String Oktal4 = input_bilangan.getText();
                    int outDes4 = Integer.parseInt(Oktal4,8);
                    output_bilangan.setText(Integer.toUnsignedString(outDes4));
                }
                
                //konversi bilangan oktal ke biner
                if(bilangan_ke.getSelectedItem()=="Biner"){
                    String Oktal5 = input_bilangan.getText();
                    int outDes5 = Integer.parseInt(Oktal5,8);
                    String hasilDes5 = Integer.toUnsignedString(outDes5);
                    int hasilBiner5 = Integer.parseInt(hasilDes5);
                    output_bilangan.setText(Integer.toBinaryString(hasilBiner5));
                }
                
                //konversi bilangan oktal ke Hexadecimal
                if(bilangan_ke.getSelectedItem()=="Hexadecimal"){
                    String Oktal6 = input_bilangan.getText();
                    int outDes6 = Integer.parseInt(Oktal6,8);
                    String hasilDes6 = Integer.toUnsignedString(outDes6);
                    int hasilHex6 = Integer.parseInt(hasilDes6);
                    output_bilangan.setText(Integer.toHexString(hasilHex6));
                }
            }
            
            //konversi bilangan biner
            if(bilangan_dari.getSelectedItem()=="Biner"){
                //konversi bilangan biner ke biner
                if(bilangan_ke.getSelectedItem()=="Biner"){
                    String biner = input_bilangan.getText();
                    output_bilangan.setText((biner));
                }
                //konversi bilangan biner ke decimal
                if(bilangan_ke.getSelectedItem()=="Decimal"){
                    String biner7 = input_bilangan.getText();
                    int outDes7 = Integer.parseInt(biner7,2);
                    output_bilangan.setText(Integer.toUnsignedString(outDes7));
                }
            
                //konversi bilangan biner ke oktal
                if(bilangan_ke.getSelectedItem()=="Oktal"){
                    String biner8 = input_bilangan.getText();
                    int outDes8 = Integer.parseInt(biner8,2);
                    String hasilDes8 = Integer.toUnsignedString(outDes8);
                    int hasilOktal8 = Integer.parseInt(hasilDes8);
                    output_bilangan.setText(Integer.toOctalString(hasilOktal8));
                }
                
                //konversi bilangan biner ke Hexadecimal
                if(bilangan_ke.getSelectedItem()=="Hexadecimal"){
                    String biner9 = input_bilangan.getText();
                    int outDes9 = Integer.parseInt(biner9);
                    String hasilDes9 = Integer.toUnsignedString(outDes9);
                    int hasilHex9 = Integer.parseInt(hasilDes9);
                    output_bilangan.setText(Integer.toHexString(hasilHex9));
                }
            }
            
            //konversi bilangan Decimal
            if(bilangan_dari.getSelectedItem()=="Decimal"){
                //konversi bilangan decimal ke decimal
                if(bilangan_ke.getSelectedItem()=="Decimal"){
                    String dec = input_bilangan.getText();
                    output_bilangan.setText((dec));
                }
                
                //konversi bilangan decimal ke oktal
                if(bilangan_ke.getSelectedItem()=="Oktal"){
                    String des10 = input_bilangan.getText();
                    int outOktal10 = Integer.parseInt(des10);
                    output_bilangan.setText(Integer.toOctalString(outOktal10));
                }
                
                //konversi bilangan decimal ke Biner
                else if(bilangan_ke.getSelectedItem()=="Biner"){
                    String des11 = input_bilangan.getText();
                    int outBiner11 = Integer.parseInt(des11);
                    output_bilangan.setText(Integer.toBinaryString(outBiner11));
                }
                
                //konversi bilangan decimal ke Hexadecimal
                else if(bilangan_ke.getSelectedItem()=="Hexadecimal"){
                    String des12 = input_bilangan.getText();
                    int outHex12 = Integer.parseInt(des12);
                    output_bilangan.setText(Integer.toHexString(outHex12));
                }
            }    
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Input Tidak Benar");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcKonversi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalcKonversi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bilangan_dari;
    private javax.swing.JComboBox<String> bilangan_ke;
    private javax.swing.JTextField input_bilangan;
    private javax.swing.JLabel inputdata;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField output_bilangan;
    private javax.swing.JLabel outputdata;
    // End of variables declaration//GEN-END:variables
}
    
